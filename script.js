const canvas=document.getElementById("gameCanvas"),ctx=canvas.getContext("2d");canvas.width=800,canvas.height=600;const hitSound=new Audio("hit.mp3");let levelTransitionInProgress=!1,ballResetInProgress=!1;const BALL_SPEED=3.25,paddleWidth=100,paddleHeight=10;let paddleX=(canvas.width-paddleWidth)/2,paddleSpeed=0;const maxPaddleSpeed=4,acceleration=.5,friction=.1,ballSize=10;let balls=[];const brickWidth=75,brickHeight=20,brickPadding=10,brickOffsetTop=50,brickOffsetLeft=35,brickColumnCount=8,brickRowCount=5;let bricks=[],isGameStarted=!1,score=0,lives=3,level=1,nextLevelGhost=!1,currentUser=null,topScore=0,blinkingBricks=[];(async()=>{currentUser=await authenticateFromURL(),currentUser&&(listenToLeaderboard(),window.addEventListener("beforeunload",(()=>{sessionStorage.removeItem("breakout_user"),sessionStorage.removeItem("breakout_avatar")})))})();const keys={};function resetLevel(){balls=[{x:canvas.width/2,y:canvas.height-30,dx:BALL_SPEED,dy:-BALL_SPEED}],paddleX=(canvas.width-paddleWidth)/2,generateBricksWithGhost()}function movePaddle(){keys.ArrowLeft?paddleSpeed-=acceleration:keys.ArrowRight?paddleSpeed+=acceleration:paddleSpeed*=1-friction,paddleSpeed=Math.max(Math.min(paddleSpeed,maxPaddleSpeed),-maxPaddleSpeed),paddleX+=paddleSpeed,paddleX=Math.max(0,Math.min(paddleX,canvas.width-paddleWidth))}function drawPaddle(){ctx.fillStyle="#fff",ctx.fillRect(paddleX,canvas.height-paddleHeight,paddleWidth,paddleHeight)}function drawBall(e){ctx.beginPath(),ctx.arc(e.x,e.y,ballSize/2,0,2*Math.PI),ctx.fillStyle="#fff",ctx.fill(),ctx.closePath()}function durabilityColor(e,t){switch(t){case"extra-life":return"0,255,0";case"extra-ball":return"0,200,255";case"ball-multiplier":return"255,165,0";case"yellow-balls":return"255,255,0";case"bomb":return"255,100,100";default:return`${Math.min(255,50*e)},${Math.min(255,25*e)},0`}}function drawBricks(){for(let e=0;e<bricks.length;e++)for(let t=0;t<bricks[e].length;t++){const a=bricks[e][t];if(a.durability>0){let r=nextLevelGhost?.4:1;if(blinkingBricks.some((a=>a.c===e&&a.r===t))){const e=1e3;r=Date.now()%e<e/2?.2:1}ctx.fillStyle=`rgba(${durabilityColor(a.durability,a.type)}, ${r})`,ctx.fillRect(a.x,a.y,brickWidth,brickHeight)}}}function getDurabilityRange(e){if(1===e)return[1,1];return[2===e?1:3*(e-1),3*e]}function generateBricksWithGhost(){nextLevelGhost=!0,levelTransitionInProgress=!0;const[e,t]=getDurabilityRange(level);bricks=[];for(let a=0;a<brickColumnCount;a++){bricks[a]=[];for(let r=0;r<brickRowCount;r++){const l=a*(brickWidth+brickPadding)+brickOffsetLeft,i=r*(brickHeight+brickPadding)+brickOffsetTop;let n="normal",s=randomInt(e,t);const d=Math.random();level>=2&&d<.05?(n="bomb",s=1):level>=3&&d<.05&&Math.random()<.5?(n="yellow-balls",s=1):level>=1&&d<.15&&(n="extra-ball",s=1+Math.floor(3*Math.random())),bricks[a][r]={x:l,y:i,durability:s,type:n}}}setTimeout((()=>{nextLevelGhost=!1,levelTransitionInProgress=!1}),1e3)}function randomInt(e,t){return Math.floor(Math.random()*(t-e+1))+e}function collisionDetection(e){if((e.x<0||e.x>canvas.width)&&(e.dx*=-1),e.y<0&&(e.dy*=-1),e.y+ballSize/2>=canvas.height-paddleHeight&&e.x>=paddleX&&e.x<=paddleX+paddleWidth){const t=(e.x-(paddleX+paddleWidth/2))/paddleWidth*Math.PI/3,a=BALL_SPEED;e.dx=a*Math.sin(t),e.dy=-Math.abs(a*Math.cos(t))}for(let t=0;t<bricks.length;t++)for(let a=0;a<bricks[t].length;a++){const r=bricks[t][a];if(r.durability>0&&e.x>r.x&&e.x<r.x+brickWidth&&e.y>r.y&&e.y<r.y+brickHeight){if(r.durability--,e.dy*=-1,e.yellow&&(e.dx*=1.1,e.dy*=1.1),r.durability<=0)switch(r.type){case"extra-life":lives++;break;case"extra-ball":const e=randomInt(1,3);for(let t=0;t<e;t++)balls.push({x:r.x,y:r.y,dx:(Math.random()-.5)*BALL_SPEED*2,dy:-BALL_SPEED});break;case"bomb":explodeSurroundingBricks(t,a);break;case"yellow-balls":for(let e=0;e<2;e++)balls.push({x:r.x,y:r.y,dx:(Math.random()-.5)*BALL_SPEED*3,dy:1.5*-BALL_SPEED,yellow:!0});break;case"ball-multiplier":let l=balls.map((e=>({x:e.x,y:e.y,dx:-e.dx,dy:-e.dy})));balls.push(...l)}hitSound.currentTime=0,hitSound.play(),score++,updateMaxScore(score)}}}function explodeSurroundingBricks(e,t){blinkingBricks=[];for(let a=e-1;a<=e+1;a++)for(let e=t-1;e<=t+1;e++)bricks[a]&&bricks[a][e]&&bricks[a][e].durability>0&&blinkingBricks.push({c:a,r:e});new Audio("bomb.MP3").play(),setTimeout((()=>{for(let{c:e,r:t}of blinkingBricks)bricks[e]&&bricks[e][t]&&(score+=bricks[e][t].durability,bricks[e][t].durability=0);blinkingBricks=[]}),1e3)}function sanitizeUsername(e){return e.replace(/[.#$\[\]]/g,"_")}function updateMaxScore(e){if(!currentUser||e<=topScore)return;topScore=e;const t=sanitizeUsername(currentUser.username),a=db.ref(`breakoutScores/${t}`);a.get().then((t=>{const r=t.val();(!r||e>(r.maxScore||0))&&a.set({username:currentUser.username,maxScore:e,timestamp:Date.now()})}))}function listenToLeaderboard(){const e=document.getElementById("leaderboardEntries");db.ref("breakoutScores").on("value",(async t=>{const a=[],r=[];t.forEach((e=>{const t=e.val();t.username&&t.maxScore&&(a.push(t),r.push(db.ref(`auth/${sanitizeUsername(t.username)}/avatarBase64`).get()))}));const l=await Promise.all(r);a.forEach(((e,t)=>{e.avatarBase64=l[t].val()||""})),a.sort(((e,t)=>t.maxScore-e.maxScore));const i=a.slice(0,20);e.innerHTML=i.map(((e,t)=>`\n        <div class="leaderboard-entry">\n          ${`<span style="margin-right:8px;">${t+1} ${0===t?"ðŸ¥‡":1===t?"ðŸ¥ˆ":2===t?"ðŸ¥‰":""}</span>`}\n          <img src="data:image/png;base64,${e.avatarBase64}" />\n          <span>${e.username}</span> - <b>${e.maxScore}</b>\n        </div>\n      `)).join("")}))}function drawHUD(){ctx.font="16px Arial",ctx.fillStyle="#fff",ctx.fillText(`Score: ${score}`,8,20),ctx.fillText(`Lives: ${lives}`,canvas.width-100,20),ctx.fillText(`Level: ${level}`,canvas.width/2-30,20)}function gameLoop(){ctx.clearRect(0,0,canvas.width,canvas.height),movePaddle(),drawBricks(),drawPaddle(),drawHUD();for(let e=balls.length-1;e>=0;e--){const t=balls[e];drawBall(t),t.x+=t.dx,t.y+=t.dy,collisionDetection(t),t.y-ballSize/2>canvas.height&&balls.splice(e,1)}if(0===balls.length&&!ballResetInProgress){if(!(lives>1))return void showGameOverScreen();ballResetInProgress=!0,lives--,setTimeout((()=>{balls=[{x:canvas.width/2,y:canvas.height-30,dx:BALL_SPEED,dy:-BALL_SPEED}],paddleX=(canvas.width-paddleWidth)/2,ballResetInProgress=!1}),1e3)}!levelTransitionInProgress&&bricks.flat().every((e=>e.durability<=0))&&(level++,generateBricksWithGhost()),ballResetInProgress?setTimeout(gameLoop,16):requestAnimationFrame(gameLoop)}function showGameOverScreen(){const e=document.createElement("div");e.id="gameOverScreen",e.style.position="absolute",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.background="rgba(0,0,0,0.85)",e.style.color="#fff",e.style.display="flex",e.style.flexDirection="column",e.style.justifyContent="center",e.style.alignItems="center",e.style.zIndex="1000",e.innerHTML=`\n    <h2>ðŸŽ® Game Over!</h2>\n    <p>Your score: <b>${score}</b></p>\n    <button style="padding:10px 20px; font-size:16px;" onclick="restartGame()">Restart</button>\n  `,document.body.appendChild(e)}function restartGame(){document.getElementById("gameOverScreen").remove(),score=0,level=1,lives=3,isGameStarted=!1,balls=[],paddleX=(canvas.width-paddleWidth)/2,Object.keys(keys).forEach((e=>keys[e]=!1)),ctx.clearRect(0,0,canvas.width,canvas.height),drawHUD(),drawBricks(),drawPaddle()}document.addEventListener("keydown",(e=>{keys[e.key]=!0,isGameStarted||"ArrowLeft"!==e.key&&"ArrowRight"!==e.key||(isGameStarted=!0,resetLevel(),gameLoop())})),document.addEventListener("keyup",(e=>keys[e.key]=!1));